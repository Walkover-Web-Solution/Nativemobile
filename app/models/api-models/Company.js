"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CompanyRequest = (function () {
    function CompanyRequest() {
    }
    return CompanyRequest;
}());
exports.CompanyRequest = CompanyRequest;
var StateDetailsRequest = (function () {
    function StateDetailsRequest() {
    }
    return StateDetailsRequest;
}());
exports.StateDetailsRequest = StateDetailsRequest;
var StateDetailsResponse = (function () {
    function StateDetailsResponse() {
    }
    return StateDetailsResponse;
}());
exports.StateDetailsResponse = StateDetailsResponse;
var AddressList = (function () {
    function AddressList() {
    }
    return AddressList;
}());
exports.AddressList = AddressList;
var GstDetail = (function () {
    function GstDetail() {
    }
    return GstDetail;
}());
exports.GstDetail = GstDetail;
var CompanyResponse = (function () {
    function CompanyResponse() {
    }
    return CompanyResponse;
}());
exports.CompanyResponse = CompanyResponse;
/*
 * Model for taxes api request
 * GET call
 * API:: (taxes) company/:companyUniqueName/tax
 * response will be array of TaxResponse
 */
var TaxResponse = (function () {
    function TaxResponse() {
        this.taxType = '';
        this.duration = '';
    }
    return TaxResponse;
}());
exports.TaxResponse = TaxResponse;
var States = (function () {
    function States() {
    }
    return States;
}());
exports.States = States;
var GetCouponResp = (function () {
    function GetCouponResp() {
    }
    return GetCouponResp;
}());
exports.GetCouponResp = GetCouponResp;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29tcGFueS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkNvbXBhbnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFHQTtJQUFBO0lBV0EsQ0FBQztJQUFELHFCQUFDO0FBQUQsQ0FBQyxBQVhELElBV0M7QUFYWSx3Q0FBYztBQWEzQjtJQUFBO0lBR0EsQ0FBQztJQUFELDBCQUFDO0FBQUQsQ0FBQyxBQUhELElBR0M7QUFIWSxrREFBbUI7QUFLaEM7SUFBQTtJQUdBLENBQUM7SUFBRCwyQkFBQztBQUFELENBQUMsQUFIRCxJQUdDO0FBSFksb0RBQW9CO0FBS2pDO0lBQUE7SUFLQSxDQUFDO0lBQUQsa0JBQUM7QUFBRCxDQUFDLEFBTEQsSUFLQztBQUxZLGtDQUFXO0FBT3hCO0lBQUE7SUFHQSxDQUFDO0lBQUQsZ0JBQUM7QUFBRCxDQUFDLEFBSEQsSUFHQztBQUhZLDhCQUFTO0FBS3RCO0lBQUE7SUE0QkEsQ0FBQztJQUFELHNCQUFDO0FBQUQsQ0FBQyxBQTVCRCxJQTRCQztBQTVCWSwwQ0FBZTtBQW9GNUI7Ozs7O0dBS0c7QUFDSDtJQUFBO1FBR1MsWUFBTyxHQUFZLEVBQUUsQ0FBQztRQUN0QixhQUFRLEdBQVcsRUFBRSxDQUFDO0lBUS9CLENBQUM7SUFBRCxrQkFBQztBQUFELENBQUMsQUFaRCxJQVlDO0FBWlksa0NBQVc7QUFjeEI7SUFBQTtJQUdBLENBQUM7SUFBRCxhQUFDO0FBQUQsQ0FBQyxBQUhELElBR0M7QUFIWSx3QkFBTTtBQUtuQjtJQUFBO0lBT0EsQ0FBQztJQUFELG9CQUFDO0FBQUQsQ0FBQyxBQVBELElBT0M7QUFQWSxzQ0FBYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElUYXgsIElUYXhEZXRhaWwgfSBmcm9tICcuLi9pbnRlcmZhY2VzL3RheC5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgSU5hbWVVbmlxdWVOYW1lIH0gZnJvbSAnLi4vaW50ZXJmYWNlcy9uYW1lVW5pcXVlTmFtZS5pbnRlcmZhY2UnO1xuXG5leHBvcnQgY2xhc3MgQ29tcGFueVJlcXVlc3Qge1xuICBwdWJsaWMgbmFtZTogc3RyaW5nO1xuICBwdWJsaWMgdW5pcXVlTmFtZTogc3RyaW5nO1xuICBwdWJsaWMgYWRkcmVzczogc3RyaW5nO1xuICBwdWJsaWMgY2l0eTogc3RyaW5nO1xuICBwdWJsaWMgc3RhdGU6IHN0cmluZztcbiAgcHVibGljIGNvdW50cnk6IHN0cmluZztcbiAgcHVibGljIHBpbmNvZGU6IHN0cmluZztcbiAgcHVibGljIGNvbnRhY3RObzogc3RyaW5nO1xuICBwdWJsaWMgZW1haWw6IHN0cmluZztcblxufVxuXG5leHBvcnQgY2xhc3MgU3RhdGVEZXRhaWxzUmVxdWVzdCB7XG4gIHB1YmxpYyBsYXN0U3RhdGU6IHN0cmluZztcbiAgcHVibGljIGNvbXBhbnlVbmlxdWVOYW1lOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBjbGFzcyBTdGF0ZURldGFpbHNSZXNwb25zZSB7XG4gIHB1YmxpYyBsYXN0U3RhdGU6IHN0cmluZztcbiAgcHVibGljIGNvbXBhbnlVbmlxdWVOYW1lOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBjbGFzcyBBZGRyZXNzTGlzdCB7XG4gIHB1YmxpYyBzdGF0ZUNvZGU6IHN0cmluZztcbiAgcHVibGljIGFkZHJlc3M6IHN0cmluZztcbiAgcHVibGljIGlzRGVmYXVsdDogYm9vbGVhbjtcbiAgcHVibGljIHN0YXRlTmFtZTogc3RyaW5nO1xufVxuXG5leHBvcnQgY2xhc3MgR3N0RGV0YWlsIHtcbiAgcHVibGljIGFkZHJlc3NMaXN0OiBBZGRyZXNzTGlzdFtdO1xuICBwdWJsaWMgZ3N0TnVtYmVyOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBjbGFzcyBDb21wYW55UmVzcG9uc2Uge1xuICBwdWJsaWMgY2FuVXNlclN3aXRjaDogYm9vbGVhbjtcbiAgcHVibGljIGNvbXBhbnlJZGVudGl0eTogYW55W107XG4gIHB1YmxpYyBhY3RpdmVGaW5hbmNpYWxZZWFyOiBBY3RpdmVGaW5hbmNpYWxZZWFyO1xuICBwdWJsaWMgZW1haWw6IHN0cmluZztcbiAgcHVibGljIGNpdHk6IHN0cmluZztcbiAgcHVibGljIHBpbmNvZGU6IHN0cmluZztcbiAgcHVibGljIGNvdW50cnk6IHN0cmluZztcbiAgcHVibGljIHVwZGF0ZWRBdDogc3RyaW5nO1xuICBwdWJsaWMgdXBkYXRlZEJ5OiBJQ29tbW9uSXRlbTtcbiAgcHVibGljIGNyZWF0ZWRBdDogc3RyaW5nO1xuICBwdWJsaWMgY3JlYXRlZEJ5OiBJQ29tbW9uSXRlbTtcbiAgcHVibGljIHVuaXF1ZU5hbWU6IHN0cmluZztcbiAgcHVibGljIGJhc2VDdXJyZW5jeTogc3RyaW5nO1xuICBwdWJsaWMgY29udGFjdE5vOiBzdHJpbmc7XG4gIHB1YmxpYyBjb21wYW55U3Vic2NyaXB0aW9uOiBDb21wYW55U3Vic2NyaXB0aW9uO1xuICBwdWJsaWMgZmluYW5jaWFsWWVhcnM6IEFjdGl2ZUZpbmFuY2lhbFllYXJbXTtcbiAgcHVibGljIHNoYXJlZEVudGl0eT86IGFueTtcbiAgcHVibGljIGFkZHJlc3M6IHN0cmluZztcbiAgcHVibGljIHN0YXRlOiBzdHJpbmc7XG4gIHB1YmxpYyBzaGFyZWQ6IGJvb2xlYW47XG4gIHB1YmxpYyBhbGlhcz86IGFueTtcbiAgcHVibGljIHJvbGU6IFJvbGU7XG4gIHB1YmxpYyBuYW1lOiBzdHJpbmc7XG4gIHB1YmxpYyBnc3REZXRhaWxzOiBHc3REZXRhaWxbXTtcbiAgcHVibGljIHBhbk51bWJlcj86IHN0cmluZztcbiAgcHVibGljIGlzTXVsdGlwbGVDdXJyZW5jeT86IGJvb2xlYW47XG4gIHB1YmxpYyB1c2VyRW50aXR5Um9sZXM/OiBVc2VyRW50aXR5Um9sZVtdO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFVzZXJFbnRpdHlSb2xlIHtcbiAgc2hhcmVkV2l0aDogSUNvbW1vbkl0ZW07XG4gIHVuaXF1ZU5hbWU6IHN0cmluZztcbiAgYWxsb3dlZENpZHJzOiBhbnlbXTtcbiAgYWxsb3dlZElwczogYW55W107XG4gIHBlcmlvZD86IGFueTtcbiAgZnJvbT86IGFueTtcbiAgdG8/OiBhbnk7XG4gIHNoYXJlZEJ5OiBJQ29tbW9uSXRlbTtcbiAgZHVyYXRpb24/OiBhbnk7XG4gIGVudGl0eTogSUNvbW1vbkl0ZW07XG4gIHJvbGU6IFJvbGU7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgUm9sZSB7XG4gIHVuaXF1ZU5hbWU6IHN0cmluZztcbiAgbmFtZTogc3RyaW5nO1xuICBzY29wZXM/OiBhbnlbXTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBDb21wYW55U3Vic2NyaXB0aW9uIHtcbiAgZGlzY291bnQ6IG51bWJlcjtcbiAgc3Vic2NyaXB0aW9uRGF0ZTogc3RyaW5nO1xuICBuZXh0QmlsbERhdGU6IHN0cmluZztcbiAgYXV0b0RlZHVjdDogYm9vbGVhbjtcbiAgcGF5bWVudE1vZGU6IHN0cmluZztcbiAgc2VydmljZVBsYW46IFNlcnZpY2VQbGFuO1xuICBwYXltZW50RHVlOiBib29sZWFuO1xuICByZW1haW5pbmdQZXJpb2Q6IG51bWJlcjtcbiAgcHJpbWFyeUJpbGxlckNvbmZpcm1lZDogYm9vbGVhbjtcbiAgYmlsbEFtb3VudDogbnVtYmVyO1xuICBwcmltYXJ5QmlsbGVyPzogYW55O1xuICBjcmVhdGVkQXQ6IHN0cmluZztcbiAgY3JlYXRlZEJ5OiBJQ29tbW9uSXRlbTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBTZXJ2aWNlUGxhbiB7XG4gIHBsYW5OYW1lOiBzdHJpbmc7XG4gIHNlcnZpY2VQZXJpb2Q6IG51bWJlcjtcbiAgYW1vdW50OiBudW1iZXI7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSUNvbW1vbkl0ZW0gZXh0ZW5kcyBJTmFtZVVuaXF1ZU5hbWUge1xuICBlbWFpbDogc3RyaW5nO1xuICBtb2JpbGVObzogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEFjdGl2ZUZpbmFuY2lhbFllYXIge1xuICBmaW5hbmNpYWxZZWFyU3RhcnRzOiBzdHJpbmc7XG4gIGZpbmFuY2lhbFllYXJFbmRzOiBzdHJpbmc7XG4gIGlzTG9ja2VkOiBib29sZWFuO1xuICB1bmlxdWVOYW1lOiBzdHJpbmc7XG59XG5cbi8qXG4gKiBNb2RlbCBmb3IgdGF4ZXMgYXBpIHJlcXVlc3RcbiAqIEdFVCBjYWxsXG4gKiBBUEk6OiAodGF4ZXMpIGNvbXBhbnkvOmNvbXBhbnlVbmlxdWVOYW1lL3RheFxuICogcmVzcG9uc2Ugd2lsbCBiZSBhcnJheSBvZiBUYXhSZXNwb25zZVxuICovXG5leHBvcnQgY2xhc3MgVGF4UmVzcG9uc2UgaW1wbGVtZW50cyBJVGF4IHtcbiAgcHVibGljIGFjY291bnQ/OiBJTmFtZVVuaXF1ZU5hbWU7XG4gIHB1YmxpYyBhY2NvdW50cz86IElOYW1lVW5pcXVlTmFtZTtcbiAgcHVibGljIHRheFR5cGU/OiBzdHJpbmcgPSAnJztcbiAgcHVibGljIGR1cmF0aW9uOiBzdHJpbmcgPSAnJztcbiAgcHVibGljIHRheERldGFpbDogSVRheERldGFpbFtdO1xuICBwdWJsaWMgdGF4RmlsZURhdGU6IG51bWJlcjtcbiAgcHVibGljIHRheE51bWJlcjogc3RyaW5nO1xuICBwdWJsaWMgbmFtZTogc3RyaW5nO1xuICBwdWJsaWMgdW5pcXVlTmFtZTogc3RyaW5nO1xuICBwdWJsaWMgZGF0ZT86IGFueTtcbiAgcHVibGljIHRheFZhbHVlPzogYW55O1xufVxuXG5leHBvcnQgY2xhc3MgU3RhdGVzIHtcbiAgcHVibGljIG5hbWU6IHN0cmluZztcbiAgcHVibGljIGNvZGU6IHN0cmluZztcbn1cblxuZXhwb3J0IGNsYXNzIEdldENvdXBvblJlc3Age1xuICBwdWJsaWMgdmFsaWRVbnRpbDogc3RyaW5nO1xuICBwdWJsaWMgbWF4QW1vdW50OiBudW1iZXI7XG4gIHB1YmxpYyBjb2RlOiBzdHJpbmc7XG4gIHB1YmxpYyBjb3VudDogbnVtYmVyO1xuICBwdWJsaWMgdmFsdWU6IG51bWJlcjtcbiAgcHVibGljIHR5cGU6IHN0cmluZztcbn1cbiJdfQ==