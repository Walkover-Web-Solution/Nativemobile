"use strict";
/**
 * Model for get invoices request
 * POST call
 * API:: company/:companyUniqueName/invoices?from,to
 * used to draw ui on invoice page
 */
Object.defineProperty(exports, "__esModule", { value: true });
var GetAllInvoicesPaginatedResponse = (function () {
    function GetAllInvoicesPaginatedResponse() {
    }
    return GetAllInvoicesPaginatedResponse;
}());
exports.GetAllInvoicesPaginatedResponse = GetAllInvoicesPaginatedResponse;
var CommonPaginatedRequest = (function () {
    function CommonPaginatedRequest() {
    }
    return CommonPaginatedRequest;
}());
exports.CommonPaginatedRequest = CommonPaginatedRequest;
var InvoiceFilterClass = (function (_super) {
    __extends(InvoiceFilterClass, _super);
    function InvoiceFilterClass() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return InvoiceFilterClass;
}(CommonPaginatedRequest));
exports.InvoiceFilterClass = InvoiceFilterClass;
var GetAllLedgersOfInvoicesResponse = (function () {
    function GetAllLedgersOfInvoicesResponse() {
    }
    return GetAllLedgersOfInvoicesResponse;
}());
exports.GetAllLedgersOfInvoicesResponse = GetAllLedgersOfInvoicesResponse;
/**
 * Generate Bulk Invoice Request
 * method: 'POST'
 * url: '/company/:companyUniqueName/invoices/bulk-generate?combined=:combined'
 */
var GenerateBulkInvoiceRequest = (function () {
    function GenerateBulkInvoiceRequest() {
    }
    return GenerateBulkInvoiceRequest;
}());
exports.GenerateBulkInvoiceRequest = GenerateBulkInvoiceRequest;
/**
 * Action On Invoice Request
 * method: 'POST'
 * url: '/company/:companyUniqueName/invoices/action'
 */
var ActionOnInvoiceRequest = (function () {
    function ActionOnInvoiceRequest() {
    }
    return ActionOnInvoiceRequest;
}());
exports.ActionOnInvoiceRequest = ActionOnInvoiceRequest;
/**
 * Get Template Response
 * method: 'GET'
 * url: '/company/:companyUniqueName/invoices/proforma/templates'
 */
var GetTemplateResponse = (function () {
    function GetTemplateResponse() {
    }
    return GetTemplateResponse;
}());
exports.GetTemplateResponse = GetTemplateResponse;
/**
 * Send Mail Request
 * method: 'POST'
 * url: '/company/:companyUniqueName/invoices/proforma/mail'
 */
var SendMailRequest = (function () {
    function SendMailRequest() {
    }
    return SendMailRequest;
}());
exports.SendMailRequest = SendMailRequest;
/**
 * Preview Invoice
 * method: 'POST'
 * url: '/company/:companyUniqueName'accounts/:accountUniqueName/invoices/preview''
 */
var PreviewInvoiceRequest = (function () {
    function PreviewInvoiceRequest() {
    }
    return PreviewInvoiceRequest;
}());
exports.PreviewInvoiceRequest = PreviewInvoiceRequest;
var PreviewInvoiceResponseClass = (function () {
    function PreviewInvoiceResponseClass() {
    }
    return PreviewInvoiceResponseClass;
}());
exports.PreviewInvoiceResponseClass = PreviewInvoiceResponseClass;
/**
 * Generate Invoice model
 */
var GenerateInvoiceRequestClass = (function () {
    function GenerateInvoiceRequestClass() {
    }
    return GenerateInvoiceRequestClass;
}());
exports.GenerateInvoiceRequestClass = GenerateInvoiceRequestClass;
/*
*
*/
var GenBulkInvoiceGroupByObj = (function () {
    function GenBulkInvoiceGroupByObj() {
    }
    return GenBulkInvoiceGroupByObj;
}());
exports.GenBulkInvoiceGroupByObj = GenBulkInvoiceGroupByObj;
var GenBulkInvoiceFinalObj = (function () {
    function GenBulkInvoiceFinalObj() {
    }
    return GenBulkInvoiceFinalObj;
}());
exports.GenBulkInvoiceFinalObj = GenBulkInvoiceFinalObj;
/*
* Get invoice template details response model
*/
var GetInvoiceTemplateDetailsResponse = (function () {
    function GetInvoiceTemplateDetailsResponse() {
    }
    return GetInvoiceTemplateDetailsResponse;
}());
exports.GetInvoiceTemplateDetailsResponse = GetInvoiceTemplateDetailsResponse;
var CustomTemplateResponse = (function () {
    function CustomTemplateResponse() {
    }
    return CustomTemplateResponse;
}());
exports.CustomTemplateResponse = CustomTemplateResponse;
var Esignature = (function () {
    function Esignature() {
        this.Name = 'companyName';
        this.SelectPage = 'LAST';
        this.ReferenceNumber = '';
        this.AadhaarNumber = '';
        this.SignatureType = '1';
        this.SignaturePosition = 'Customize';
        this.authToken = 'YkvC7sGkgLDNT67ZvxCXg7t2Cy0FjUI8QTSh44QWo+Y=';
        this.PageNumber = '';
        this.FileType = 'PDF';
        this.PreviewRequired = true;
        this.CustomizeCoordinates = '420,200,540,150';
        this.PagelevelCoordinates = '';
        this.UploadSignatureOption = true;
        this.SelectFontOption = true;
        this.DrawSignatureOption = true;
        this.eSignaturePadOption = true;
        this.SUrl = 'https://esign.giddh.com/Fu59xHxuPsQFWEy4zhwB/';
        this.FUrl = 'https://esign.giddh.com/fxaLuXqhG9GhvCezvqMp/';
        this.CUrl = 'https://esign.giddh.com/fxaLuXqhG9GhvCezvqMp/';
    }
    return Esignature;
}());
exports.Esignature = Esignature;
//# sourceMappingURL=data:application/json;base64,